plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.9.25'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.9.25'
    id 'org.springframework.boot' version '3.5.6'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.itpuraan'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2025.0.0")
}

dependencies {
    // --- Core Spring Boot Starters ---
    implementation 'org.springframework.boot:spring-boot-starter-web'          // REST API + embedded Tomcat
    implementation 'org.springframework.boot:spring-boot-starter-actuator'     // Monitoring + actuator endpoints

    // --- Spring Cloud ---
    implementation 'org.springframework.cloud:spring-cloud-starter-config'     // Config Server client
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client' // Service discovery client
    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'  // Enables bootstrap context for config and restores /actuator/refresh endpoint in Spring Cloud 2025.x+ (see troubleshooting guide for details)
    // In Spring Boot 3.5 + Spring Cloud 2025, /actuator/refresh is not available by default; this dependency restores legacy local refresh behavior.
    // ⚠️ Removed: spring-cloud-starter → this is a BOM aggregator, redundant when you use specific starters

    // --- Kotlin + Jackson ---
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'        // JSON <-> Kotlin data classes
    implementation 'org.jetbrains.kotlin:kotlin-reflect'                       // Required for Spring + Kotlin runtime

    // --- Lombok ---
    compileOnly 'org.projectlombok:lombok'             // Compile-time only
    annotationProcessor 'org.projectlombok:lombok'     // Annotation processor

    // --- MySQL Driver ---
    runtimeOnly 'com.mysql:mysql-connector-j'           // MySQL JDBC driver

    // --- Testing ---
    testImplementation 'org.springframework.boot:spring-boot-starter-test'     // JUnit, Mockito, AssertJ, etc.
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'               // Kotlin + JUnit 5 support
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'               // Test launcher
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

kotlin {
    compilerOptions {
        freeCompilerArgs.addAll '-Xjsr305=strict'
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
